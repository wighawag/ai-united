import { Executor } from "../machine/pkg/machine.js";

const fromHexString = (hexString) =>
  Uint8Array.from(hexString.match(/.{1,2}/g).map((byte) => parseInt(byte, 16)));

async function setup() {
  const wasm_bytes_as_hex =
    "0061736d01000000010b0260017f0060027f7f017f02110103656e76097072696e745f753332000003030200010405017001010105030100100619037f01418080c0000b7f00418080c0000b7f00418080c0000b073505066d656d6f7279020004696e697400010675706461746500020a5f5f646174615f656e6403010b5f5f686561705f6261736503020a11020a0020001080808080000b040041050b0045046e616d65000e0d626f745f727573742e7761736d011a0300097072696e745f7533320104696e69740206757064617465071201000f5f5f737461636b5f706f696e746572004d0970726f64756365727302086c616e6775616765010452757374000c70726f6365737365642d6279010572757374631d312e38322e30202866366535313165656320323032342d31302d31352900490f7461726765745f6665617475726573042b0a6d756c746976616c75652b0f6d757461626c652d676c6f62616c732b0f7265666572656e63652d74797065732b087369676e2d657874";

  const wasm_bytes = fromHexString(wasm_bytes_as_hex);
  const executor = new Executor();
  executor.add_module(wasm_bytes);
  executor.add_module(wasm_bytes);
  const result = executor.execute();
  console.log(result);
}

setup();
